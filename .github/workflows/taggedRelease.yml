name: "tagged-release"

env:
  DOTNET_VERSION: '6.0.x'           # set this to the dot net version to use

on:
  push:
    tags:
      - "v*"

jobs:
  buildAngular:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.6.x]

    steps:
    - name: 'Checkout Github Action'
      # uses: actions/checkout@master
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: npm install and npm run build
      run: |
        cd src
        cd MicroservicesAng
        npm ci
        npm run build

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: MPCAngular
        path: 'src/MicroservicesAng/dist/'
        retention-days: 1

  build-and-put-releases:
    runs-on: windows-latest
    needs: buildAngular

    steps:
    - name: 'Checkout Github Action'
      # uses: actions/checkout@master
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Download angular static site
      uses: actions/download-artifact@v2
      with:
        name: MPCAngular
    
    - name: Verify downloads
      run: |
        dir 
        dir MicroservicesAng
        dir src/MicroservicesPortChooser/MicroservicesPortChooserWeb/wwwroot
        del src/MicroservicesPortChooser/MicroservicesPortChooserWeb/wwwroot/index.html
        copy MicroservicesAng/*.* src/MicroservicesPortChooser/MicroservicesPortChooserWeb/wwwroot/


    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }} 

    - name: making releases
      run: |
        cd src
        cd MicroservicesPortChooser
        cd MicroservicesPortChooserWeb
        dotnet publish -r win-x64 -c Release -o ${{env.AZURE_WEBAPP_NAME}}WinX64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true
        dotnet publish -r linux-x64 -c Release -o ${{env.AZURE_WEBAPP_NAME}}linX64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true 
        dotnet publish -r win-x64 -c Release -o ${{env.AZURE_WEBAPP_NAME}}IISWinX64 --self-contained false -p:PublishSingleFile=false -p:PublishTrimmed=false
        
    - name: Archive Release Linux
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'releaseLin.zip'
        path: '${{github.workspace}}\src\MicroservicesPortChooser\MicroservicesPortChooserWeb\${{env.AZURE_WEBAPP_NAME}}linX64\'
        exclusions: '*.git* /*node_modules/* .editorconfig'       

    - name: Archive Release Windows
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'releaseWin.zip'
        path: '${{github.workspace}}\src\MicroservicesPortChooser\MicroservicesPortChooserWeb\${{env.AZURE_WEBAPP_NAME}}WinX64\'
        exclusions: '*.git* /*node_modules/* .editorconfig'       

    - name: Archive Release IIS
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'releaseIISWin.zip'
        path: '${{github.workspace}}\src\MicroservicesPortChooser\MicroservicesPortChooserWeb\${{env.AZURE_WEBAPP_NAME}}IISWinX64\'
        exclusions: '*.git* /*node_modules/* .editorconfig'       


    - name: verify releases
      run: |
        # dir env:
        # echo "!!!1"
        
        # dir src/MicroservicesPortChooser/MicroservicesPortChooserWeb/${{env.AZURE_WEBAPP_NAME}}WinX64
        # echo "!!!2"
        
        # dir src/MicroservicesPortChooser/MicroservicesPortChooserWeb/${{env.AZURE_WEBAPP_NAME}}linX64
        # echo "!!!3"
        # echo "$env:GITHUB_WORKSPACE"
        # dir $env:GITHUB_WORKSPACE
        # echo "!!!4"
        # echo "$env:GITHUB_WORKSPACE"
        # dir $env:GITHUB_WORKSPACE\src\MicroservicesPortChooser\MicroservicesPortChooserWeb\${{env.AZURE_WEBAPP_NAME}}WinX64
        # echo "!!!"
        # echo "$env:GITHUB_WORKSPACE"
        dir $env:GITHUB_WORKSPACE\release*.zip
        dir $env:GITHUB_WORKSPACE\src\MicroservicesPortChooser\MicroservicesPortChooserWeb\${{env.AZURE_WEBAPP_NAME}}linX64
    - name: ReleaseWindowsAndLinux
      uses: softprops/action-gh-release@v1
      with:
        files:  |
            releaseLin.zip
            releaseWin.zip
            releaseIISWin.zip
            
    - name: delete older-releases@v0
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        #repo: <owner>/<repoName> # defaults to current repo
        keep_latest: 2
        #delete_tag_pattern: beta # defaults to ""
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # - name: publish release
    #   uses: "marvinpinto/action-automatic-releases@latest"
    #   with:
    #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
    #     prerelease: true    
    #     automatic_release_tag: "latest"    
    #     files: |
    #       '${{github.workspace}}\releaseWin.zip'
    #       '${{github.workspace}}\releaseLin.zip'
          