# Docs for the Azure Web Apps Deploy action: https://go.microsoft.com/fwlink/?linkid=2134798
# More GitHub Actions for Azure: https://go.microsoft.com/fwlink/?linkid=2135048

name: Azure App Service - MicroservicesPortChooser(Production), Build and deploy DotnetCore app

env:
  AZURE_WEBAPP_NAME: MicroservicesPortChooser    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: 'src/MicroservicesPortChooser/MicroservicesPortChooserWeb'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '8.0.x'           # set this to the dot net version to use
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  buildAngular:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.6.x]

    steps:
    - name: 'Checkout Github Action'
      # uses: actions/checkout@master
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: npm install and npm run build
      run: |
        cd src
        cd MicroservicesAng
        npm ci
        npm run build

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: MPCAngular
        path: 'src/MicroservicesAng/dist/'
        retention-days: 1

  build-and-deploy:
    runs-on: windows-latest
    needs: buildAngular

    steps:
    - name: 'Checkout Github Action'
      # uses: actions/checkout@master
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Download angular static site
      uses: actions/download-artifact@v2
      with:
        name: MPCAngular
    
    - name: Verify downloads
      run: |
        dir 
        dir MicroservicesAng
        dir src/MicroservicesPortChooser/MicroservicesPortChooserWeb/wwwroot
        del src/MicroservicesPortChooser/MicroservicesPortChooserWeb/wwwroot/index.html
        copy MicroservicesAng/*.* src/MicroservicesPortChooser/MicroservicesPortChooserWeb/wwwroot/


    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }} 

    - name: Build with dotnet
      run: | 
        cd src 
        cd MicroservicesPortChooser
        dotnet build --configuration Release

    - name: dotnet publish
      run: | 
        cd src 
        cd MicroservicesPortChooser
        cd MicroservicesPortChooserWeb        
        dotnet publish -c Release -o myapp 

    - name: Run Azure webapp deploy action using publish profile credentials
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }} 
        slot-name: Production
        publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_1E96351636EF465ABA652B668796CBFA }}
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'

    - name: package
      run: |
        cd src
        cd MicroservicesPortChooser
        cd MSPCWebExtension
        dotnet pack -c Release -o nugetPackage
    - name: upload artifacts nuget
      uses: actions/upload-artifact@v2
      with:
        name: NuGetPortChooser
        path: 'src/MicroservicesPortChooser/MSPCWebExtension/nugetPackage/'


    - name: making releases
      run: |
        cd src
        cd MicroservicesPortChooser
        cd MicroservicesPortChooserWeb
        dotnet publish -r win-x64 -c Release -o ${{env.AZURE_WEBAPP_NAME}}WinX64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:PublishPackageVersion=1.0.0
        dotnet publish -r linux-x64 -c Release -o ${{env.AZURE_WEBAPP_NAME}}linX64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:PublishPackageVersion=1.0.0
    - name: upload artifacts web win
      uses: actions/upload-artifact@v2
      with:
        name: WebServiceWinx64
        path: 'src/MicroservicesPortChooser/MicroservicesPortChooserWeb/${{env.AZURE_WEBAPP_NAME}}WinX64/'

    - name: upload artifacts web linux
      uses: actions/upload-artifact@v2
      with:
        name: WebServiceLinx64
        path: 'src/MicroservicesPortChooser/MicroservicesPortChooserWeb/${{env.AZURE_WEBAPP_NAME}}linX64/'


